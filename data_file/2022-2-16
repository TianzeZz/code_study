70 爬楼梯

class Solution {
public:
    int climbStairs(int n) {
        int x = 1;
        int y = 2;
        if (n<=2){
            return n ;
        }
        int z=0;
        for (int i =2;i<n;i++){
            z=x+y;
            x=y;
            y=z;
        }
        return z;
    }
};


746 最小花费爬楼梯

int min(int x,int y){
    if(x<y) return x;
    else return y;
}

class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) {
        int length = cost.size();
        if (length<=2) return min(cost[0],cost[1]);
        int low = min(cost[0],cost[1]);
        int high = min(cost[0]+cost[2],cost[1]);
        int temp = high;
        for (int i =3;i<length;i++){
            temp = min(low+cost[i-1],high+cost[i]);
            low=high;
            high=temp;
        }
        return temp;
        
    }
};
