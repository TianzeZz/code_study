
136. 只出现一次的数字

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int ans=0;
        for(int num : nums){
            ans^=num;
        }
        return ans;
    }
};

190. 颠倒二进制位

class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
        uint32_t k = 1;
        uint32_t ans=0;
        for(int i =31;i>=0;i--){
            if(n & 1<<i){
                ans+=k;
            }
            k*=2;
        }
        return ans;
    }
};


6. Z 字形变换

class Solution {
public:
    string convert(string s, int numRows) {
        string ans;
        if(numRows ==1){
            return s;
        }
        for(int i = 0;i<numRows;i++){
            int j = i;
            bool k =0;
            
            while(j<s.size()){
                if(i ==0 || i==numRows-1){
                    ans+=s[j];
                    j+=2*numRows-2;
                }
                else{
                    ans+=s[j];
                    if(k ==0){
                        j+=(numRows-1-i)*2;
                        k=1;
                    }
                    else if(k==1){
                        j+=i*2;
                        k=0;
                    }
                }
            } 
        }
        return ans;
    }
};

