344. 反转字符串

class Solution {
public:
    void swap(char& a,char& b){
        char temp = a;
        a=b;
        b=temp; 
    }
    void reverseString(vector<char>& s) {
        int i=0;
        int j=s.size()-1;
        while(i<j){
            swap(s[i],s[j]);
            i++;
            j--;
        }
    }
};

557. 反转字符串中的单词 III

class Solution {
public:
    void swap(char& a,char& b){
        char temp = a;
        a=b;
        b=temp; 
    }

    string reverseWords(string s) {
        int i = 0;
        int length = s.length();
        for(int j=0;j<length;j++){
            if (s[j]==' '){
                int k=j-1;
                while(i<k){
                    swap(s[i],s[k]);
                    i++;
                    k--;
                }
                i=j+1;
            }
            else if (j==length-1){
                int k=j;
                while(i<k){
                    swap(s[i],s[k]);
                    i++;
                    k--;
                }
                i=j+1;
            }

        }
        return s;
    }
};

55. 跳跃游戏

class Solution {
public:
    bool canJump(vector<int>& nums) {
        int k = nums.size();
        int most=0;
        if (k==1) return true;
        for (int i =0; i<k;i++){
            if(i>most){
                return false;
            }
            else if (most>=k-1){
                return true;
            }
            if(nums[i]+i>most){
                most=nums[i]+i;
            }
            
        }
        return false;
    }
};

45. 跳跃游戏 II

class Solution {
public:
    int jump(vector<int>& nums) {
        int length = nums.size();
        if (length==1) return 0;
        int loc = 0;
        int time = 1;
        int max_ar = loc+nums[loc];
        while (max_ar<length-1){
            int last_max_ar= loc+nums[loc];
            for (int i = loc;i<=last_max_ar;i++){
                if(i+nums[i]>max_ar  && i<length){
                    max_ar= i+nums[i];
                    loc=i;
                }
            }
            time+=1;
        }
        return time;
    }
};
